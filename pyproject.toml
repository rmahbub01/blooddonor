[project]
name = "blooddonor"
version = "0.1.0"
description = "A comprehensive platform facilitating seamless connections between blood seekers and donors, originating from the University of Chittagong (CU) and expanding beyond. By streamlining the donation process, we enable critical, life-saving exchanges while driving positive community impact. Built on FastAPI, our platform delivers fast, secure, and reliable access to blood donations."
authors = [{name="Mahbub Rahman", email="creative.mahbubrahman@gmail.com"}]
license = "MIT"
keywords = ["blood donation", "university", "university of chittagong", "blood seekers", "blood donors", "community", "healthcare", "FastAPI"]
readme = "README.md"
requires-python = ">=3.12.3, <3.13"
dependencies = [
    "SQLAlchemy>=2.0.33",
    "pillow>=10.4.0",
    # Pin bcrypt until passlib supports the latest
    "bcrypt==4.0.1",
    "APScheduler>=3.10.4",
    "uvicorn>=0.32.0",
    "fastapi[standard]>=0.115.3",
    "pydantic-settings>=2.6.0",
    "python-jose>=3.3.0",
    "aiosqlite>=0.20.0",
    "emails>=0.6",
    "passlib[bcrypt]>=1.7.4",
    "alembic>=1.13.3",
    "greenlet>=3.1.1",
]

[tool.uv]
dev-dependencies = [
    "coverage>=7.6.4",
    "mypy>=1.13.0",
    "pytest-asyncio>=0.24.0",
    "pytest>=7.4.4",
    "ruff>=0.7.0",
]


[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "module"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
